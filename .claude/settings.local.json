{
  "permissions": {
    "allow": [
      "Bash(heroku releases:*)",
      "Bash(heroku git:remote:*)",
      "Bash(git subtree push:*)",
      "Bash(git subtree split:*)",
      "Bash(heroku buildpacks:clear:*)",
      "Bash(git branch:*)",
      "Bash(heroku auth:token:*)",
      "Bash(git checkout:*)",
      "Read(/D:\\vipspot/**)",
      "Read(/D:\\vipspot/**)",
      "Bash(git tag:*)",
      "Bash(git push:*)",
      "Bash(git rev-parse:*)",
      "Bash(npx --yes tree-cli -l 3 -i \"node_modules|.git|dist|.next|build\")",
      "Bash(grep:*)",
      "Bash(! grep -RInE '(vipspot\\.us|gmail\\.com|old@example\\.com)' -- .)",
      "Bash(node:*)",
      "Bash(git --no-pager diff)",
      "Bash(git add:*)",
      "Bash(npm run test:links:*)",
      "Bash(npm run test:branding:*)",
      "Bash(./scripts/smoke-grep.sh:*)",
      "Bash(set -euo pipefail)",
      "Bash(gh pr view:*)",
      "Bash(gh run view:*)",
      "WebFetch(domain:github.com)",
      "Bash(git commit:*)",
      "Bash(npm ci:*)",
      "Bash(test:*)",
      "Bash(for PR in 9 10 11)",
      "Bash(do echo \"Attempting to merge PR #$PR ...\")",
      "Bash(if gh pr merge $PR --squash --delete-branch --subject \"merge: site fixes & deploy config\")",
      "Bash(then echo \"✅ Merged #$PR\")",
      "Bash(else echo \"⚠️ PR #$PR needs manual resolution\")",
      "Bash(fi)",
      "Bash(done)",
      "Bash(gh pr checkout:*)",
      "Bash(git fetch:*)",
      "Bash(git merge:*)",
      "Bash(do echo \"Closing PR #$PR as changes are already in main...\")",
      "Bash(gh pr close:*)",
      "Bash(gh workflow run:*)",
      "Bash(gh run list:*)",
      "Bash(CANON_BASE=\"https://codepen.io/CoderRvrse/pen/azvxEZG\")",
      "Bash(CANON_URL=\"$CANON_URL\" node scripts/fix-matrix-links.mjs)",
      "Bash(! grep -RInE \"(YYYYY|ZZZZZ)\" -- *.html site/**/*.html)",
      "Bash(exit 3)",
      "Bash(if grep -RInE \"(YYYYY|ZZZZZ)\" -- *.html site/**/*.html)",
      "Bash(then echo \"❌ placeholder remains\")",
      "Bash(else echo \"✅ No placeholders found\")",
      "Bash(npm run test:*)",
      "WebFetch(domain:vipspot.net)"
    ],
    "deny": [],
    "ask": []
  }
}