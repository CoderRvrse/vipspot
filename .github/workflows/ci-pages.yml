name: VIPSpot CI + Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  verify:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Guard against problematic Unicode in JS
        run: |
          # Check using Node.js for reliable Unicode detection across platforms
          if node -e "
            const fs=require('fs');
            let found=false;
            for(const f of ['js/main.js','js/matrix-bg.js','js/tilt-tech.js']){
              const s=fs.readFileSync(f,'utf8');
              if(/[\u201C\u201D\u2018\u2019\u2013\u2014\u2026]/.test(s)){
                console.log(f+': Contains problematic Unicode');
                found=true;
              }
            }
            if(found) process.exit(1);
          "; then
            echo "✅ No problematic Unicode characters found in JS files"
          else
            echo "::error title=Problematic Unicode in JS::Replace smart quotes, em-dashes, ellipses with ASCII equivalents."
            exit 1
          fi
      - name: JS syntax validation
        run: |
          for jsfile in js/*.js; do
            echo "Checking syntax: $jsfile"
            node --check "$jsfile" || exit 1
          done
          echo "✅ All JS files have valid syntax"
      - name: Guard against legacy RAF handle
        shell: bash
        run: |
          set -euo pipefail

          echo "[guard] Checking for legacy 'animationId'…"
          if grep -R -nE '\banimationId\b' js/; then
            echo "::error title=Legacy RAF handle found::Rename 'animationId' to 'rafId' and use start()/stopRAF()."
            exit 1
          fi
          echo "[guard] OK: no legacy handle."

          echo "[guard] Verifying new RAF markers…"
          # Use fixed-string grep (-F) so '.' is treated literally
          grep -Fq "let rafId" js/matrix-bg.js || { 
            echo "::error title=Missing marker::Could not find 'let rafId' in js/matrix-bg.js"; exit 1; 
          }
          grep -Fq "VIPSpot._raf" js/matrix-bg.js || { 
            echo "::error title=Missing API::Could not find 'VIPSpot._raf' in js/matrix-bg.js"; exit 1; 
          }
          echo "[guard] OK: new markers present."
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - run: npm ci || npm i
      - run: npm run build:css
      - name: Start static server (repo root)
        run: |
          python3 -m http.server 8000 & echo $! > server.pid
      - name: Wait for server
        run: |
          for i in {1..60}; do
            curl -fsS http://localhost:8000 >/dev/null && break
            sleep 0.5
          done
      - name: Verify CSP precedes stylesheets
        run: |
          CSP=$(grep -n 'http-equiv="Content-Security-Policy"' index.html | cut -d: -f1 | head -1)
          LINK=$(grep -n '<link[^>]*rel="stylesheet"' index.html | cut -d: -f1 | head -1)
          echo "CSP=$CSP LINK=$LINK"
          test -n "$CSP" && test -n "$LINK" && [ "$CSP" -lt "$LINK" ]
      - name: Prove DOM markers
        run: node scripts/prove-local.mjs
      - name: Stop server
        if: always()
        run: kill $(cat server.pid) || true

  build:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Guard against problematic Unicode in JS
        run: |
          # Check using Node.js for reliable Unicode detection across platforms
          if node -e "
            const fs=require('fs');
            let found=false;
            for(const f of ['js/main.js','js/matrix-bg.js','js/tilt-tech.js']){
              const s=fs.readFileSync(f,'utf8');
              if(/[\u201C\u201D\u2018\u2019\u2013\u2014\u2026]/.test(s)){
                console.log(f+': Contains problematic Unicode');
                found=true;
              }
            }
            if(found) process.exit(1);
          "; then
            echo "✅ No problematic Unicode characters found in JS files"
          else
            echo "::error title=Problematic Unicode in JS::Replace smart quotes, em-dashes, ellipses with ASCII equivalents."
            exit 1
          fi
      - name: JS syntax validation
        run: |
          for jsfile in js/*.js; do
            echo "Checking syntax: $jsfile"
            node --check "$jsfile" || exit 1
          done
          echo "✅ All JS files have valid syntax"
      - name: API healthcheck
        run: curl -fsS https://vipspot-api-a7ce781e1397.herokuapp.com/healthz
      - name: Guard against legacy RAF handle
        shell: bash
        run: |
          set -euo pipefail

          echo "[guard] Checking for legacy 'animationId'…"
          if grep -R -nE '\banimationId\b' js/; then
            echo "::error title=Legacy RAF handle found::Rename 'animationId' to 'rafId' and use start()/stopRAF()."
            exit 1
          fi
          echo "[guard] OK: no legacy handle."

          echo "[guard] Verifying new RAF markers…"
          # Use fixed-string grep (-F) so '.' is treated literally
          grep -Fq "let rafId" js/matrix-bg.js || { 
            echo "::error title=Missing marker::Could not find 'let rafId' in js/matrix-bg.js"; exit 1; 
          }
          grep -Fq "VIPSpot._raf" js/matrix-bg.js || { 
            echo "::error title=Missing API::Could not find 'VIPSpot._raf' in js/matrix-bg.js"; exit 1; 
          }
          echo "[guard] OK: new markers present."
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - run: npm ci || npm i
      - name: Inject build version
        run: |
          # Generate BUILD_VER (date + short SHA)
          export BUILD_VER="$(date -u +%Y-%m-%d)-${GITHUB_SHA::7}"
          echo "BUILD_VER=${BUILD_VER}" >> $GITHUB_ENV
          
          # Stamp all files with version placeholders
          sed -i "s/__BUILD_VER__/${BUILD_VER}/g" index.html
          sed -i "s/__BUILD_VER__/${BUILD_VER}/g" js/main.js
          sed -i "s/__BUILD_VER__/${BUILD_VER}/g" sw.js
          
          # Verify all files got stamped
          grep -q "${BUILD_VER}" index.html || exit 1
          grep -q "${BUILD_VER}" js/main.js || exit 1
          grep -q "${BUILD_VER}" sw.js || exit 1
          
          echo "✅ Stamped version: ${BUILD_VER}"
      - name: Verify consistent versioning
        run: |
          # Extract version from index.html to ensure all files match
          VER=$(grep -oE 'v=[0-9-]{10,}-[0-9a-f]{7}' index.html | head -1 | cut -d= -f2)
          echo "Detected version: ${VER}"
          
          # Verify all files contain the same version
          grep -q "${VER}" js/main.js || { echo "❌ main.js missing version ${VER}"; exit 1; }
          grep -q "${VER}" sw.js || { echo "❌ sw.js missing version ${VER}"; exit 1; }
          
          # Verify SW uses network-first strategy for HTML
          grep -q "text/html" sw.js || { echo "❌ SW missing network-first HTML strategy"; exit 1; }
          
          echo "✅ All files have consistent version: ${VER}"
          echo "✅ SW implements network-first for HTML"
      - run: npm run build
      - uses: actions/configure-pages@v5
      - name: Prepare static site artifact (from repo root)
        run: |
          mkdir _site
          rsync -a \
            --exclude ".git/" \
            --exclude ".github/" \
            --exclude "node_modules/" \
            --exclude "_site/" \
            --exclude "*-remote-backup-*.git/" \
            ./ _site/
          echo "vipspot.net" > _site/CNAME
      - uses: actions/upload-pages-artifact@v3
        with: { path: _site }

  deploy:
    if: github.event_name != 'pull_request'
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4