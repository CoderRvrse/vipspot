name: Guard: Release Matcher

on:
  pull_request:
    paths:
      - '.github/workflows/release.yml'
      - '.github/workflows/guards-release-matcher.yml'
  workflow_dispatch:

permissions:
  contents: read

jobs:
  test-commit-matcher:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18, 20]
        
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Test shared release patterns module
        run: |
          echo "🧪 Testing release patterns with Node.js ${{ matrix.node-version }}"
          echo ""
          
          # Import and test the shared patterns module
          node - <<'JS'
          import { 
            RELEASE_TYPES, 
            TEST_CASES, 
            getReleaseType, 
            generateVersionTag, 
            hasCodePenMention 
          } from './.github/scripts/release-patterns.mjs';
          
          console.log('📦 Testing shared release patterns module...');
          console.log('📝 Release types:', RELEASE_TYPES.join(', '));
          console.log('');
          
          // Test positive cases from shared module
          console.log('✅ Testing commits that SHOULD trigger releases:');
          let passCount = 0;
          for (const msg of TEST_CASES.shouldMatch) {
            const releaseType = getReleaseType(msg);
            const triggersRelease = RELEASE_TYPES.includes(releaseType) || releaseType === 'major';
            
            if (triggersRelease) {
              const versionTag = generateVersionTag(releaseType);
              console.log(`  ✓ "${msg}" → ${releaseType} → ${versionTag}`);
              passCount++;
            } else {
              console.log(`  ❌ "${msg}" - FAILED TO MATCH (got: ${releaseType})`);
              process.exit(1);
            }
          }
          console.log(`  → ${passCount}/${TEST_CASES.shouldMatch.length} passed`);
          console.log('');
          
          // Test negative cases from shared module
          console.log('🚫 Testing commits that should NOT trigger releases:');
          let blockCount = 0;
          for (const msg of TEST_CASES.shouldNotMatch) {
            const releaseType = getReleaseType(msg);
            const triggersRelease = RELEASE_TYPES.includes(releaseType) || releaseType === 'major';
            
            if (!triggersRelease) {
              console.log(`  ✓ "${msg}" - correctly blocked (${releaseType})`);
              blockCount++;
            } else {
              console.log(`  ❌ "${msg}" - INCORRECTLY MATCHED (${releaseType})`);
              process.exit(2);
            }
          }
          console.log(`  → ${blockCount}/${TEST_CASES.shouldNotMatch.length} correctly blocked`);
          console.log('');
          
          // Test CodePen detection from shared module
          console.log('🎨 Testing CodePen detection pattern:');
          let codepenPassed = 0;
          for (const { msg, expected } of TEST_CASES.codepenTests) {
            const detected = hasCodePenMention(msg);
            const indicator = detected ? '🎨' : '  ';
            
            if (detected === expected) {
              console.log(`  ${indicator} ✓ "${msg}"`);
              codepenPassed++;
            } else {
              console.log(`  ${indicator} ❌ "${msg}" - expected ${expected}, got ${detected}`);
              process.exit(3);
            }
          }
          console.log(`  → ${codepenPassed}/${TEST_CASES.codepenTests.length} CodePen tests passed`);
          console.log('');
          
          console.log('🎉 All shared pattern tests passed!');
          console.log('✅ Release workflow and guard are perfectly synchronized');
          JS
          
      - name: Test CLI interface
        run: |
          echo "🔧 Testing CLI interface..."
          
          # Test various commit message types
          node .github/scripts/release-patterns.mjs "feat: new feature"
          echo ""
          node .github/scripts/release-patterns.mjs "feat!: breaking change"
          echo ""
          node .github/scripts/release-patterns.mjs "chore: update deps (CodePen)"
          echo ""
          node .github/scripts/release-patterns.mjs "style: fix formatting"
          
          echo "✅ CLI interface working correctly"